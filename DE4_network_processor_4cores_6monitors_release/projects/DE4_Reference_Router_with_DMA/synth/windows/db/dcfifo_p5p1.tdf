--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Stratix IV" IGNORE_CARRY_BUFFERS="OFF" LPM_NUMWORDS=256 LPM_SHOWAHEAD="ON" LPM_WIDTH=72 LPM_WIDTH_R=36 LPM_WIDTHU=8 LPM_WIDTHU_R=9 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=3 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRITE_ACLR_SYNCH="OFF" WRSYNC_DELAYPIPE=3 aclr data q rdclk rdempty rdreq rdusedw wrclk wrfull wrreq ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Stratix IV" LOW_POWER_MODE="AUTO" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 12.1SP1 cbx_a_gray2bin 2013:01:31:18:04:57:SJ cbx_a_graycounter 2013:01:31:18:04:57:SJ cbx_altdpram 2013:01:31:18:04:58:SJ cbx_altsyncram 2013:01:31:18:04:59:SJ cbx_cycloneii 2013:01:31:18:04:59:SJ cbx_dcfifo 2013:01:31:18:04:59:SJ cbx_fifo_common 2013:01:31:18:04:57:SJ cbx_lpm_add_sub 2013:01:31:18:04:59:SJ cbx_lpm_compare 2013:01:31:18:04:59:SJ cbx_lpm_counter 2013:01:31:18:04:59:SJ cbx_lpm_decode 2013:01:31:18:04:59:SJ cbx_lpm_mux 2013:01:31:18:04:59:SJ cbx_mgl 2013:01:31:18:08:27:SJ cbx_scfifo 2013:01:31:18:04:59:SJ cbx_stratix 2013:01:31:18:04:59:SJ cbx_stratixii 2013:01:31:18:04:59:SJ cbx_stratixiii 2013:01:31:18:05:00:SJ cbx_stratixv 2013:01:31:18:05:00:SJ cbx_util_mgl 2013:01:31:18:04:59:SJ  VERSION_END


-- Copyright (C) 1991-2012 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION a_gray2bin_rdb (gray[8..0])
RETURNS ( bin[8..0]);
FUNCTION a_graycounter_q27 (aclr, clock, cnt_en)
RETURNS ( q[8..0]);
FUNCTION a_graycounter_mgc (aclr, clock, cnt_en)
RETURNS ( q[8..0]);
FUNCTION altsyncram_jn71 (aclr1, address_a[7..0], address_b[8..0], addressstall_b, clock0, clock1, data_a[71..0], wren_a)
RETURNS ( q_b[35..0]);
FUNCTION dffpipe_oe9 (clock, clrn, d[9..0])
RETURNS ( q[9..0]);
FUNCTION dffpipe_id9 (clock, clrn, d[8..0])
RETURNS ( q[8..0]);
FUNCTION alt_synch_pipe_mc8 (clock, clrn, d[8..0])
RETURNS ( q[8..0]);
FUNCTION cmpr_836 (dataa[4..0], datab[4..0])
RETURNS ( aeb);
FUNCTION cmpr_736 (dataa[3..0], datab[3..0])
RETURNS ( aeb);
FUNCTION cntr_21e (aset, clock, cnt_en)
RETURNS ( cout, q[0..0]);
FUNCTION mux_gv7 (data[1..0], sel[0..0])
RETURNS ( result[0..0]);

--synthesis_resources = lut 16 ram_bits (AUTO) 18432 reg 94 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=d103;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 1;{-to rdemp_eq_comp_lsb_aeb} POWER_UP_LEVEL=HIGH;{-to rdemp_eq_comp_msb_aeb} POWER_UP_LEVEL=HIGH;{-to wrptr_g} suppress_da_rule_internal=S102;-name CUT ON -from delayed_wrptr_g -to rs_dgwp|dffpipe_jd9:dffpipe12|dffe13a;-name SDC_STATEMENT ""set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|dffpipe_jd9:dffpipe12|dffe13a* """;

SUBDESIGN dcfifo_p5p1
( 
	aclr	:	input;
	data[71..0]	:	input;
	q[35..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdreq	:	input;
	rdusedw[8..0]	:	output;
	wrclk	:	input;
	wrfull	:	output;
	wrreq	:	input;
) 
VARIABLE 
	rdptr_g_gray2bin : a_gray2bin_rdb;
	rs_dgwp_gray2bin : a_gray2bin_rdb;
	rdptr_g1p : a_graycounter_q27;
	wrptr_g1p : a_graycounter_mgc;
	fifo_ram : altsyncram_jn71;
	delayed_wrptr_g[8..0] : dffe;
	rdemp_eq_comp_lsb_aeb : dffe
		WITH (
			power_up = "high"
		);
	rdemp_eq_comp_msb_aeb : dffe
		WITH (
			power_up = "high"
		);
	rdptr_b[0..0] : dffe;
	rdptr_g[8..0] : dffe;
	wrfull_eq_comp_lsb_mux_reg : dffe;
	wrfull_eq_comp_msb_mux_reg : dffe;
	wrptr_g[8..0] : dffe;
	rs_brp : dffpipe_oe9;
	rs_bwp : dffpipe_id9;
	rs_dgwp : alt_synch_pipe_mc8;
	ws_dgrp : alt_synch_pipe_mc8;
	rdusedw_sub_dataa[9..0]	:	WIRE;
	rdusedw_sub_datab[9..0]	:	WIRE;
	rdusedw_sub_result[9..0]	:	WIRE;
	rdempty_eq_comp1_lsb : cmpr_836;
	rdempty_eq_comp1_msb : cmpr_736;
	rdempty_eq_comp_lsb : cmpr_836;
	rdempty_eq_comp_msb : cmpr_736;
	wrfull_eq_comp1_lsb : cmpr_836;
	wrfull_eq_comp1_msb : cmpr_736;
	wrfull_eq_comp_lsb : cmpr_836;
	wrfull_eq_comp_msb : cmpr_736;
	cntr_b : cntr_21e;
	rdemp_eq_comp_lsb_mux : mux_gv7;
	rdemp_eq_comp_msb_mux : mux_gv7;
	wrfull_eq_comp_lsb_mux : mux_gv7;
	wrfull_eq_comp_msb_mux : mux_gv7;
	int_rdempty	: WIRE;
	int_wrfull	: WIRE;
	ram_address_a[7..0]	: WIRE;
	ram_address_b[8..0]	: WIRE;
	rs_brp_reg_data[9..0]	: WIRE;
	temp_rdusedw_sub_data[9..0]	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_g1s[8..0]	: WIRE;
	wrptr_gs[8..0]	: WIRE;

BEGIN 
	rdptr_g_gray2bin.gray[] = rdptr_g[].q;
	rs_dgwp_gray2bin.gray[] = rs_dgwp.q[];
	rdptr_g1p.aclr = aclr;
	rdptr_g1p.clock = rdclk;
	rdptr_g1p.cnt_en = (valid_rdreq & cntr_b.cout);
	wrptr_g1p.aclr = aclr;
	wrptr_g1p.clock = wrclk;
	wrptr_g1p.cnt_en = valid_wrreq;
	fifo_ram.aclr1 = aclr;
	fifo_ram.address_a[] = ram_address_a[];
	fifo_ram.address_b[] = ram_address_b[];
	fifo_ram.addressstall_b = (! valid_rdreq);
	fifo_ram.clock0 = wrclk;
	fifo_ram.clock1 = rdclk;
	fifo_ram.data_a[] = data[];
	fifo_ram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].clrn = (! aclr);
	delayed_wrptr_g[].d = wrptr_g[].q;
	rdemp_eq_comp_lsb_aeb.clk = rdclk;
	rdemp_eq_comp_lsb_aeb.d = rdemp_eq_comp_lsb_mux.result[];
	rdemp_eq_comp_lsb_aeb.prn = (! aclr);
	rdemp_eq_comp_msb_aeb.clk = rdclk;
	rdemp_eq_comp_msb_aeb.d = rdemp_eq_comp_msb_mux.result[];
	rdemp_eq_comp_msb_aeb.prn = (! aclr);
	rdptr_b[].clk = rdclk;
	rdptr_b[].clrn = (! aclr);
	rdptr_b[].d = cntr_b.q[];
	rdptr_b[].ena = valid_rdreq;
	rdptr_g[].clk = rdclk;
	rdptr_g[].clrn = (! aclr);
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	wrfull_eq_comp_lsb_mux_reg.clk = wrclk;
	wrfull_eq_comp_lsb_mux_reg.clrn = (! aclr);
	wrfull_eq_comp_lsb_mux_reg.d = wrfull_eq_comp_lsb_mux.result[];
	wrfull_eq_comp_msb_mux_reg.clk = wrclk;
	wrfull_eq_comp_msb_mux_reg.clrn = (! aclr);
	wrfull_eq_comp_msb_mux_reg.d = wrfull_eq_comp_msb_mux.result[];
	wrptr_g[].clk = wrclk;
	wrptr_g[].clrn = (! aclr);
	wrptr_g[].d = wrptr_g1p.q[];
	wrptr_g[].ena = valid_wrreq;
	rs_brp.clock = rdclk;
	rs_brp.clrn = (! aclr);
	rs_brp.d[] = rs_brp_reg_data[];
	rs_bwp.clock = rdclk;
	rs_bwp.clrn = (! aclr);
	rs_bwp.d[] = rs_dgwp_gray2bin.bin[];
	rs_dgwp.clock = rdclk;
	rs_dgwp.clrn = (! aclr);
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	ws_dgrp.clock = wrclk;
	ws_dgrp.clrn = (! aclr);
	ws_dgrp.d[] = rdptr_g[].q;
	rdusedw_sub_result[] = rdusedw_sub_dataa[] - rdusedw_sub_datab[];
	rdusedw_sub_dataa[] = temp_rdusedw_sub_data[];
	rdusedw_sub_datab[] = rs_brp.q[];
	rdempty_eq_comp1_lsb.dataa[4..0] = delayed_wrptr_g[4..0].q;
	rdempty_eq_comp1_lsb.datab[4..0] = rdptr_g1p.q[4..0];
	rdempty_eq_comp1_msb.dataa[3..0] = delayed_wrptr_g[8..5].q;
	rdempty_eq_comp1_msb.datab[3..0] = rdptr_g1p.q[8..5];
	rdempty_eq_comp_lsb.dataa[4..0] = delayed_wrptr_g[4..0].q;
	rdempty_eq_comp_lsb.datab[4..0] = rdptr_g[4..0].q;
	rdempty_eq_comp_msb.dataa[3..0] = delayed_wrptr_g[8..5].q;
	rdempty_eq_comp_msb.datab[3..0] = rdptr_g[8..5].q;
	wrfull_eq_comp1_lsb.dataa[4..0] = rdptr_g[4..0].q;
	wrfull_eq_comp1_lsb.datab[4..0] = wrptr_g1s[4..0];
	wrfull_eq_comp1_msb.dataa[3..0] = rdptr_g[8..5].q;
	wrfull_eq_comp1_msb.datab[3..0] = wrptr_g1s[8..5];
	wrfull_eq_comp_lsb.dataa[4..0] = rdptr_g[4..0].q;
	wrfull_eq_comp_lsb.datab[4..0] = wrptr_gs[4..0];
	wrfull_eq_comp_msb.dataa[3..0] = rdptr_g[8..5].q;
	wrfull_eq_comp_msb.datab[3..0] = wrptr_gs[8..5];
	cntr_b.aset = aclr;
	cntr_b.clock = rdclk;
	cntr_b.cnt_en = valid_rdreq;
	rdemp_eq_comp_lsb_mux.data[] = ( rdempty_eq_comp1_lsb.aeb, rdempty_eq_comp_lsb.aeb);
	rdemp_eq_comp_lsb_mux.sel[] = valid_rdreq;
	rdemp_eq_comp_msb_mux.data[] = ( rdempty_eq_comp1_msb.aeb, rdempty_eq_comp_msb.aeb);
	rdemp_eq_comp_msb_mux.sel[] = valid_rdreq;
	wrfull_eq_comp_lsb_mux.data[] = ( wrfull_eq_comp1_lsb.aeb, wrfull_eq_comp_lsb.aeb);
	wrfull_eq_comp_lsb_mux.sel[] = valid_wrreq;
	wrfull_eq_comp_msb_mux.data[] = ( wrfull_eq_comp1_msb.aeb, wrfull_eq_comp_msb.aeb);
	wrfull_eq_comp_msb_mux.sel[] = valid_wrreq;
	int_rdempty = (rdemp_eq_comp_lsb_aeb.q & rdemp_eq_comp_msb_aeb.q);
	int_wrfull = (wrfull_eq_comp_lsb_mux_reg.q & wrfull_eq_comp_msb_mux_reg.q);
	q[] = fifo_ram.q_b[];
	ram_address_a[] = ( (wrptr_g[8..8].q $ wrptr_g[7..7].q), wrptr_g[6..0].q);
	ram_address_b[] = ( (rdptr_g1p.q[8..8] $ rdptr_g1p.q[7..7]), rdptr_g1p.q[6..0], cntr_b.q[]);
	rdempty = int_rdempty;
	rdusedw[] = ( rdusedw_sub_result[8..0]);
	rs_brp_reg_data[] = ( rdptr_g_gray2bin.bin[], rdptr_b[].q);
	temp_rdusedw_sub_data[] = ( rs_bwp.q[], GND);
	valid_rdreq = (rdreq & (! int_rdempty));
	valid_wrreq = (wrreq & (! int_wrfull));
	wrfull = int_wrfull;
	wrptr_g1s[] = ( (! wrptr_g1p.q[8..8]), (! wrptr_g1p.q[7..7]), wrptr_g1p.q[6..0]);
	wrptr_gs[] = ( (! wrptr_g[8..8].q), (! wrptr_g[7..7].q), wrptr_g[6..0].q);
END;
--VALID FILE
