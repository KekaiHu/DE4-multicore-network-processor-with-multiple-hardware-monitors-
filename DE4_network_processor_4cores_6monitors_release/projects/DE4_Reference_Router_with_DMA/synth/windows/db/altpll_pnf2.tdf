--altpll bandwidth_type="AUTO" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" clk0_divide_by=1 clk0_duty_cycle=50 clk0_multiply_by=1 clk0_phase_shift="0" clk1_divide_by=25 clk1_duty_cycle=50 clk1_multiply_by=2 clk1_phase_shift="0" compensate_clock="CLK0" device_family="Stratix IV" inclk0_input_frequency=8000 intended_device_family="Stratix IV" operation_mode="normal" pll_type="AUTO" port_clk0="PORT_USED" port_clk1="PORT_USED" port_clk2="PORT_UNUSED" port_clk3="PORT_UNUSED" port_clk4="PORT_UNUSED" port_clk5="PORT_UNUSED" port_clk6="PORT_UNUSED" port_clk7="PORT_UNUSED" port_clk8="PORT_UNUSED" port_clk9="PORT_UNUSED" port_inclk1="PORT_UNUSED" port_phasecounterselect="PORT_UNUSED" port_phasedone="PORT_UNUSED" port_scandata="PORT_UNUSED" port_scandataout="PORT_UNUSED" using_fbmimicbidir_port="OFF" width_clock=10 clk inclk CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 12.1SP1 cbx_altclkbuf 2013:01:31:18:04:58:SJ cbx_altiobuf_bidir 2013:01:31:18:04:58:SJ cbx_altiobuf_in 2013:01:31:18:04:58:SJ cbx_altiobuf_out 2013:01:31:18:04:58:SJ cbx_altpll 2013:01:31:18:04:59:SJ cbx_cycloneii 2013:01:31:18:04:59:SJ cbx_lpm_add_sub 2013:01:31:18:04:59:SJ cbx_lpm_compare 2013:01:31:18:04:59:SJ cbx_lpm_counter 2013:01:31:18:04:59:SJ cbx_lpm_decode 2013:01:31:18:04:59:SJ cbx_lpm_mux 2013:01:31:18:04:59:SJ cbx_mgl 2013:01:31:18:08:27:SJ cbx_stratix 2013:01:31:18:04:59:SJ cbx_stratixii 2013:01:31:18:04:59:SJ cbx_stratixiii 2013:01:31:18:05:00:SJ cbx_stratixv 2013:01:31:18:05:00:SJ cbx_util_mgl 2013:01:31:18:04:59:SJ  VERSION_END


-- Copyright (C) 1991-2012 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION stratixiv_pll (areset, clkswitch, configupdate, fbin, inclk[1..0], pfdena, phasecounterselect[phasecounterselect_width-1..0], phasestep, phaseupdown, scanclk, scanclkena, scandata)
WITH ( AUTO_SETTINGS, BANDWIDTH, BANDWIDTH_TYPE, C0_HIGH, C0_INITIAL, C0_LOW, C0_MODE, C0_PH, C0_TEST_SOURCE, C1_HIGH, C1_INITIAL, C1_LOW, C1_MODE, C1_PH, C1_TEST_SOURCE, C1_USE_CASC_IN, C2_HIGH, C2_INITIAL, C2_LOW, C2_MODE, C2_PH, C2_TEST_SOURCE, C2_USE_CASC_IN, C3_HIGH, C3_INITIAL, C3_LOW, C3_MODE, C3_PH, C3_TEST_SOURCE, C3_USE_CASC_IN, C4_HIGH, C4_INITIAL, C4_LOW, C4_MODE, C4_PH, C4_TEST_SOURCE, C4_USE_CASC_IN, C5_HIGH, C5_INITIAL, C5_LOW, C5_MODE, C5_PH, C5_TEST_SOURCE, C5_USE_CASC_IN, c6_high, C6_INITIAL, C6_LOW, C6_MODE, C6_PH, C6_TEST_SOURCE, C6_USE_CASC_IN, c7_high, C7_INITIAL, C7_LOW, C7_MODE, C7_PH, C7_TEST_SOURCE, C7_USE_CASC_IN, c8_high, C8_INITIAL, C8_LOW, C8_MODE, C8_PH, C8_TEST_SOURCE, C8_USE_CASC_IN, c9_high, C9_INITIAL, C9_LOW, C9_MODE, C9_PH, C9_TEST_SOURCE, C9_USE_CASC_IN, CHARGE_PUMP_CURRENT, CHARGE_PUMP_CURRENT_BITS, CLK0_COUNTER, CLK0_DIVIDE_BY, CLK0_DUTY_CYCLE, CLK0_MULTIPLY_BY, CLK0_OUTPUT_FREQUENCY, CLK0_PHASE_SHIFT, CLK0_PHASE_SHIFT_NUM, clk0_use_even_counter_mode, clk0_use_even_counter_value, CLK1_COUNTER, CLK1_DIVIDE_BY, CLK1_DUTY_CYCLE, CLK1_MULTIPLY_BY, CLK1_OUTPUT_FREQUENCY, CLK1_PHASE_SHIFT, CLK1_PHASE_SHIFT_NUM, clk1_use_even_counter_mode, clk1_use_even_counter_value, CLK2_COUNTER, CLK2_DIVIDE_BY, CLK2_DUTY_CYCLE, CLK2_MULTIPLY_BY, CLK2_OUTPUT_FREQUENCY, CLK2_PHASE_SHIFT, CLK2_PHASE_SHIFT_NUM, clk2_use_even_counter_mode, clk2_use_even_counter_value, CLK3_COUNTER, CLK3_DIVIDE_BY, CLK3_DUTY_CYCLE, CLK3_MULTIPLY_BY, CLK3_OUTPUT_FREQUENCY, CLK3_PHASE_SHIFT, CLK3_PHASE_SHIFT_NUM, clk3_use_even_counter_mode, clk3_use_even_counter_value, CLK4_COUNTER, CLK4_DIVIDE_BY, CLK4_DUTY_CYCLE, CLK4_MULTIPLY_BY, CLK4_OUTPUT_FREQUENCY, CLK4_PHASE_SHIFT, CLK4_PHASE_SHIFT_NUM, clk4_use_even_counter_mode, clk4_use_even_counter_value, CLK5_COUNTER, CLK5_DIVIDE_BY, CLK5_DUTY_CYCLE, CLK5_MULTIPLY_BY, CLK5_OUTPUT_FREQUENCY, CLK5_PHASE_SHIFT, clk5_use_even_counter_mode, clk5_use_even_counter_value, CLK6_COUNTER, clk6_divide_by, clk6_duty_cycle, clk6_multiply_by, CLK6_OUTPUT_FREQUENCY, clk6_phase_shift, clk6_use_even_counter_mode, clk6_use_even_counter_value, CLK7_COUNTER, clk7_divide_by, clk7_duty_cycle, clk7_multiply_by, CLK7_OUTPUT_FREQUENCY, clk7_phase_shift, clk7_use_even_counter_mode, clk7_use_even_counter_value, CLK8_COUNTER, clk8_divide_by, clk8_duty_cycle, clk8_multiply_by, CLK8_OUTPUT_FREQUENCY, clk8_phase_shift, clk8_use_even_counter_mode, clk8_use_even_counter_value, CLK9_COUNTER, clk9_divide_by, clk9_duty_cycle, clk9_multiply_by, CLK9_OUTPUT_FREQUENCY, clk9_phase_shift, clk9_use_even_counter_mode, clk9_use_even_counter_value, CLKOUT_WIDTH = 10, COMPENSATE_CLOCK, DPA_DIVIDE_BY, DPA_DIVIDER, DPA_MULTIPLY_BY, ENABLE_SWITCH_OVER_COUNTER, INCLK0_INPUT_FREQUENCY, INCLK1_INPUT_FREQUENCY, LOCK_HIGH, LOCK_LOW, lock_window_ui, lock_window_ui_bits, LOOP_FILTER_C, LOOP_FILTER_C_BITS, LOOP_FILTER_R, LOOP_FILTER_R_BITS, M, M_INITIAL, M_PH, M_TEST_SOURCE, N, OPERATION_MODE, PFD_MAX, PFD_MIN, PHASECOUNTERSELECT_WIDTH = 4, PLL_COMPENSATION_DELAY, PLL_TYPE, SCAN_CHAIN_MIF_FILE, self_reset_on_loss_lock, SIMULATION_TYPE, SWITCH_OVER_COUNTER, SWITCH_OVER_TYPE, TEST_BYPASS_LOCK_DETECT, USE_DC_COUPLING, VCO_CENTER, VCO_DIVIDE_BY, vco_frequency_control, VCO_MAX, VCO_MIN, VCO_MULTIPLY_BY, vco_phase_shift_step, VCO_POST_SCALE, VCO_RANGE_DETECTOR_HIGH_BITS, VCO_RANGE_DETECTOR_LOW_BITS)
RETURNS ( activeclock, clk[CLKOUT_WIDTH-1..0], clkbad[1..0], fbout, locked, phasedone, scandataout, scandone, vcooverrange, vcounderrange);

--synthesis_resources = stratixiv_pll 1 
SUBDESIGN altpll_pnf2
( 
	clk[9..0]	:	output;
	inclk[1..0]	:	input;
) 
VARIABLE 
	pll1 : stratixiv_pll
		WITH (
			BANDWIDTH_TYPE = "auto",
			CLK0_DIVIDE_BY = 1,
			CLK0_DUTY_CYCLE = 50,
			CLK0_MULTIPLY_BY = 1,
			CLK0_PHASE_SHIFT = "0",
			CLK1_DIVIDE_BY = 25,
			CLK1_DUTY_CYCLE = 50,
			CLK1_MULTIPLY_BY = 2,
			CLK1_PHASE_SHIFT = "0",
			COMPENSATE_CLOCK = "clk0",
			INCLK0_INPUT_FREQUENCY = 8000,
			OPERATION_MODE = "normal",
			PLL_TYPE = "auto"
		);

BEGIN 
	pll1.fbin = pll1.fbout;
	pll1.inclk[] = inclk[];
	clk[] = pll1.clk[];
END;
--VALID FILE
